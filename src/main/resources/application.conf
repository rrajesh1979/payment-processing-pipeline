akka {
    actor {
        allow-java-serialization = true
        serializers {
            java = "akka.serialization.JavaSerializer"
            proto = "akka.remote.serialization.ProtobufSerializer"
        }
        serialization-bindings {
            "com.google.protobuf.Message" = proto
        }
    }
    persistence {
			journal {
				plugin = "akka-contrib-mongodb-persistence-journal"
				leveldb.native = false
			}
			snapshot-store {
				plugin = "akka-contrib-mongodb-persistence-snapshot"
			}
		}

		contrib {
			persistence.mongodb {
				mongo {
					mongouri = "mongodb://localhost:27017/akka-persistence-example"
					journal-collection = "journal"
					journal-index = "journal_index"
					snaps-collection = "snapshots"
					snaps-index = "snaps_index"
					journal-write-concern = "Acknowledged"
					use-legacy-serialization = false
				}
	    }
    }
}

postgresDemo {
    akka.persistence.journal.plugin = "jdbc-journal"
    akka.persistence.snapshot-store.plugin = "jdbc-snapshot-store"

    akka-persistence-jdbc {
        shared-databases {
            slick {
                profile = "slick.jdbc.PostgresProfile$"
                db {
                    numThreads = 10
                    driver = "org.postgresql.Driver"
                    url = "jdbc:postgresql://localhost:5432/akka"
                }
            }
        }
    }

    jdbc-journal {
        use-shared-db = "slick"
    }

    jdbc-snapshot-store {
        use-shared-db = "slick"
    }
}

cassandraDemo {
    akka.actor.allow-java-serialization = true
    akka.persistence.journal.plugin = "akka.persistence.cassandra.journal"
    akka.persistence.snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
}

paymentPersistence {
    akka.actor.allow-java-serialization = true
    akka.actor.serializers.proto = "akka.remote.serialization.ProtobufSerializer"
    akka.actor.serialization-bindings {
        "com.google.protobuf.Message" = proto
    }

    akka.persistence.journal.plugin = "akka.persistence.cassandra.journal"
    akka.persistence.snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
}

paymentPersistenceMongoDB {
    akka.actor.allow-java-serialization = true
    akka.actor.serializers.proto = "akka.remote.serialization.ProtobufSerializer"
    akka.actor.serialization-bindings {
        "com.google.protobuf.Message" = proto
    }

    akka.persistence {
        journal {
            plugin = "akka-contrib-mongodb-persistence-journal"
            leveldb.native = false
        }
        snapshot-store {
            plugin = "akka-contrib-mongodb-persistence-snapshot"
        }
    }

    akka.contrib {
        persistence.mongodb {
            mongo {
                mongouri = "mongodb://localhost:27017/akka-persistence-example?retryWrites=true"
                journal-collection = "journal"
                journal-index = "journal_index"
                snaps-collection = "snapshots"
                snaps-index = "snaps_index"
                journal-write-concern = "Acknowledged"
                use-legacy-serialization = false
            }
        }
    }
}